// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherApp.Data;

#nullable disable

namespace WeatherApi.Migrations
{
    [DbContext(typeof(WeatherContext))]
    [Migration("20250517130112_AddWindSpeedToWeatherData")]
    partial class AddWindSpeedToWeatherData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("WeatherApp.Models.WeatherData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrentCondition")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentHumidity")
                        .HasColumnType("INTEGER");

                    b.Property<double>("CurrentTemperature")
                        .HasColumnType("REAL");

                    b.Property<double>("CurrentWindKph")
                        .HasColumnType("REAL");

                    b.Property<double>("Lat")
                        .HasColumnType("REAL");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Lon")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WeatherRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
